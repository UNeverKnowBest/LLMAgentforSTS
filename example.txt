{
  "available_commands": [
    "string"
  ],
  "ready_for_command": "boolean",
  "in_game": "boolean",
  "game_state": {
    "screen_name": "string",
    "is_screen_up": "boolean",
    "screen_type": "string",
    "room_phase": "string",
    "action_phase": "string",
    "current_action": "string",
    "room_type": "string",
    "current_hp": "integer",
    "max_hp": "integer",
    "floor": "integer",
    "act": "integer",
    "act_boss": "string",
    "gold": "integer",
    "seed": "long",
    "class": "string",
    "ascension_level": "integer",
    "relics": [
      {
        "id": "string",
        "name": "string",
        "counter": "integer"
      }
    ],
    "deck": [
      {
        "id": "string",
        "name": "string",
        "cost": "integer",
        "rarity": "string",
        "type": "string",
        "upgrades": "integer",
        "uuid": "string",
        "is_playable": "boolean",
        "has_target": "boolean",
        "exhausts": "boolean",
        "ethereal": "boolean",
        "misc": "integer"
      }
    ],
    "potions": [
      {
        "id": "string",
        "name": "string",
        "can_use": "boolean",
        "can_discard": "boolean",
        "requires_target": "boolean"
      }
    ],
    "map": [
      {
        "x": "integer",
        "y": "integer",
        "symbol": "string",
        "children": [
          {
            "x": "integer",
            "y": "integer"
          }
        ],
        "parents": [
          {
            "x": "integer",
            "y": "integer"
          }
        ]
      }
    ],
    "keys": {
      "ruby": "boolean",
      "emerald": "boolean",
      "sapphire": "boolean"
    },
    "choice_list": [
      "string"
    ],
    "combat_state": {
      "turn": "integer",
      "cards_discarded_this_turn": "integer",
      "times_damaged": "integer",
      "player": {
        "current_hp": "integer",
        "max_hp": "integer",
        "block": "integer",
        "energy": "integer",
        "orbs": [
          {
            "id": "string",
            "name": "string",
            "evoke_amount": "integer",
            "passive_amount": "integer"
          }
        ],
        "powers": [
          {
            "id": "string",
            "name": "string",
            "amount": "integer",
            "damage": "integer",
            "misc": "integer",
            "just_applied": "boolean",
            "card": {
            }
          }
        ]
      },
      "monsters": [
        {
          "id": "string",
          "name": "string",
          "current_hp": "integer",
          "max_hp": "integer",
          "block": "integer",
          "intent": "string",
          "is_gone": "boolean",
          "half_dead": "boolean",
          "move_id": "integer",
          "move_base_damage": "integer",
          "move_adjusted_damage": "integer",
          "move_hits": "integer",
          "last_move_id": "integer",
          "second_last_move_id": "integer",
          "powers": [
            {
            }
          ]
        }
      ],
      "draw_pile": [
        {
        }
      ],
      "discard_pile": [
        {
        }
      ],
      "exhaust_pile": [
        {
        }
      ],
      "hand": [
        {
        }
      ],
      "limbo": [
        {
        }
      ],
      "card_in_play": {
      }
    },
    "screen_state": {
    }
  }
}

字段详细说明
顶层对象
available_commands (字符串数组): 当前可以执行的指令列表 (例如 ["play", "end", "potion"])。

ready_for_command (布尔值): 游戏状态是否稳定并准备好接收下一条指令。

in_game (布尔值): 是否在游戏对局内（true），或者在主菜单（false）。

game_state (对象): 核心游戏状态对象。仅在 in_game 为 true 时出现。

game_state 对象
通用字段 (始终存在)
screen_name (字符串): 游戏内部的屏幕枚举名称 (例如 MAP, CARD_REWARD, GRID)。

is_screen_up (布尔值): 游戏是否有弹出式屏幕。

screen_type (字符串): CommunicationMod定义的、更易于理解的屏幕或决策类型 (例如 MAP, CARD_REWARD, REST, COMBAT)。

room_phase (字符串): 当前房间的阶段 (例如 COMBAT, EVENT, COMPLETE)。

action_phase (字符串): 动作管理器的阶段 (例如 WAITING_ON_USER, EXECUTING_ACTIONS)。

room_type (字符串): 当前房间的Java类名 (例如 MonsterRoom, ShopRoom, RestRoom)。

current_hp / max_hp (整数): 玩家当前/最大生命值。

floor / act (整数): 当前层数和章节数。

act_boss (字符串): 当前章节可见的Boss的ID。

gold (整数): 玩家的金币。

seed (长整数): 当前对局的种子。

class (字符串): 玩家的职业枚举 (例如 IRONCLAD, THE_SILENT)。

ascension_level (整数): 进阶等级。

relics (对象数组): 玩家拥有的遗物列表。

id (字符串): 遗物ID。

name (字符串): 遗物名称。

counter (整数): 遗物计数器（如 -1 代表无计数器）。

deck (对象数组): 玩家的完整卡组列表。

id (字符串): 卡牌ID (例如 Strike_R)。

name (字符串): 卡牌名称。

cost (整数): 卡牌当前回合的能量消耗 (-1 代表X费, -2 代表不可用)。

rarity (字符串): 稀有度 (BASIC, COMMON, UNCOMMON, RARE)。

type (字符串): 类型 (ATTACK, SKILL, POWER, STATUS, CURSE)。

upgrades (整数): 升级次数。

uuid (字符串): 每张牌独一无二的实例ID。

is_playable (布尔值): 当前是否可用（不保证有合法目标）。

has_target (布尔值): 是否需要指定一个敌人作为目标。

exhausts (布尔值): 是否消耗。

ethereal (布尔值): 是否虚无。

misc (整数, 可选): 特殊值，如仪式匕首的伤害。

potions (对象数组): 玩家的药水栏。

id (字符串): 药水ID (空药水栏为 Potion Slot)。

name (字符串): 药水名称。

can_use / can_discard (布尔值): 是否可用/可丢弃。

requires_target (布尔值): 是否需要指定目标。

map (对象数组): 完整的地牢地图。

x, y (整数): 节点坐标。

symbol (字符串): 房间符号 (M, E, $, R, T, ?)。

children, parents (对象数组): 连接的子/父节点列表，每个节点仅包含 x 和 y。

keys (对象): 三色钥匙的持有情况。

ruby, emerald, sapphire (布尔值)。

条件字段 (特定情况下出现)
current_action (字符串, 可选): 如果动作队列不为空，则为当前动作的类名。

choice_list (字符串数组, 可选): 如果choose指令可用，这里会列出所有可选选项的小写字符串。

combat_state (对象, 可选): 仅在战斗中出现。

turn (整数): 战斗回合数。

cards_discarded_this_turn (整数): 本回合已弃牌数。

times_damaged (整数): 本场战斗受伤次数。

player (对象): 战斗中的玩家状态。

block (整数): 当前格挡值。

energy (整数): 当前能量。

orbs (对象数组): 充能球列表。

id, name (字符串)。

evoke_amount, passive_amount (整数)。

powers (对象数组): 玩家的能力列表。

id, name, amount (字符串/整数)。

damage (整数, 可选): 能力造成的伤害（如 TheBomb）。

misc (整数, 可选): 特殊值（如 Flight 的层数）。

just_applied (布尔值, 可选): 是否是刚施加的。

card (对象, 可选): 关联的卡牌对象（如 Nightmare）。

monsters (对象数组): 敌人列表。

id, name, current_hp, max_hp, block (字符串/整数)。

intent (字符串): 意图枚举名 (如果玩家有符文穹顶，则为 NONE)。

is_gone, half_dead (布尔值)。

move_id (整数, 可选): 敌人当前行动的ID。

move_base_damage, move_adjusted_damage (整数, 可选): 基础伤害和显示在屏幕上的实际伤害。

move_hits (整数, 可选): 攻击段数。

last_move_id, second_last_move_id (整数, 可选): 上个/上上个行动的ID。

powers (对象数组): 敌人的能力列表（结构同玩家）。

draw_pile, discard_pile, exhaust_pile, hand, limbo (对象数组): 各个牌堆中的卡牌列表。

card_in_play (对象, 可选): 如果有正在打出的牌，这里是该牌的对象。

screen_state (对象, 可选): 根据当前屏幕类型，结构会动态变化。

如果 screen_type 是 EVENT:

body_text (字符串): 事件的主体文本。

event_name, event_id (字符串)。

options (对象数组): 可选选项列表。

text, label (字符串): 选项的完整文本和标签文本。

disabled (布尔值)。

choice_index (整数, 可选): choose指令对应的索引。

如果 screen_type 是 CARD_REWARD:

cards (对象数组): 奖励的卡牌列表。

bowl_available (布尔值): 是否可用唱歌碗。

skip_available (布尔值): 是否可跳过。

如果 screen_type 是 COMBAT_REWARD:

rewards (对象数组): 奖励列表。

reward_type (字符串): 奖励类型 (GOLD, RELIC, POTION 等)。

gold (整数, 可选)。

relic (遗物对象, 可选)。

potion (药水对象, 可选)。

link (遗物对象, 可选): 蓝钥匙关联的遗物。

如果 screen_type 是 SHOP_SCREEN:

cards, relics, potions (对象数组): 商店出售的物品，额外包含 price 字段。

purge_available (布尔值): 是否可删除卡牌。

purge_cost (整数): 删牌费用。

如果 screen_type 是 GRID:

cards, selected_cards (对象数组): 网格中的所有卡牌和已选卡牌。

num_cards (整数): 需要选择的数量。

any_number (布尔值): 是否可选任意数量。

for_upgrade, for_transform, for_purge (布尔值): 选择的目的。

confirm_up (布尔值): 确认按钮是否出现。

如果 screen_type 是 HAND_SELECT:

hand, selected (对象数组): 手牌和已选中的牌。

max_cards (整数): 最多可选数量。

can_pick_zero (布尔值): 是否可选择0张。

如果 screen_type 是 GAME_OVER:

score (整数)。                                          

victory (布尔值)。

...以及其他屏幕类型对应的特定结构。

这份文档详尽地列出了CommunicationMod生成的所有JSON字段及其结构，为您构建AI代理提供了坚实的数据基础。