{% set game_state = game_state_json.game_state %}
{% set screen_state = game_state.screen_state %}
{% set screen_type = game_state.screen_type %}
{% set player_deck = game_state.deck %}


{% set archetypes = {
    "IRONCLAD": [
        {
            "name": "Strength Build",
            "core_synergy": "Gain Strength, then multiply it with multi-hit or scaling attacks.",
            "key_cards": ["Inflame", "Spot Weakness", "Demon Form", "Limit Break"],
            "payoff_cards": ["Heavy Blade", "Whirlwind", "Reaper", "Twin Strike"]
        },
        {
            "name": "Barricade/Block Build",
            "core_synergy": "Use Barricade to make Block permanent, then generate massive amounts of it.",
            "key_cards": ["Barricade", "Entrench", "Feel No Pain", "Impervious"],
            "payoff_cards": ["Body Slam"]
        },
        {
            "name": "Exhaust Build",
            "core_synergy": "Benefit from exhausting cards, often creating powerful card draw and energy engines.",
            "key_cards": ["Corruption", "Feel No Pain", "Dark Embrace"],
            "payoff_cards": ["Dead Branch (Relic)", "Fiend Fire", "Sever Soul"]
        }
    ],
    "SILENT": [
        {
            "name": "Poison Build",
            "core_synergy": "Apply stacks of Poison for damage-over-time, then multiply it for a burst finish.",
            "key_cards": ["Noxious Fumes", "Deadly Poison", "Bouncing Flask", "Corpse Explosion"],
            "payoff_cards": ["Catalyst"]
        },
        {
            "name": "Shiv Build",
            "core_synergy": "Generate numerous 0-cost Shivs to enable 'on-attack' effects from powers and relics.",
            "key_cards": ["Blade Dance", "Cloak and Dagger", "Infinite Blades", "Accuracy"],
            "payoff_cards": ["Wrist Blade (Relic)", "Shuriken (Relic)", "Kunai (Relic)", "After Image", "Finisher"]
        },
        {
            "name": "Discard Build",
            "core_synergy": "Use discard outlets to trigger effects, gain resources, and cycle through the deck quickly.",
            "key_cards": ["Acrobatics", "Dagger Throw", "Survivor", "Tools of the Trade"],
            "payoff_cards": ["Tactician", "Reflex", "Eviscerate"]
        }
    ],
    "DEFECT": [
        {
            "name": "Frost/Focus Build (The Turtle)",
            "core_synergy": "Generate Frost orbs for passive block and scale their effectiveness with Focus.",
            "key_cards": ["Defragment", "Consume", "Coolheaded", "Glacier"],
            "payoff_cards": ["Biased Cognition", "Blizzard", "Loop"]
        },
        {
            "name": "Lightning/Claw Build",
            "core_synergy": "Generate Lightning orbs for damage while playing many low-cost cards, scaling Claw's damage.",
            "key_cards": ["Claw", "Go for the Eyes", "Ball Lightning", "Electrodynamics"],
            "payoff_cards": ["All for One", "Rebound"]
        },
        {
            "name": "Dark Orb Build",
            "core_synergy": "Generate Dark orbs and passively charge them up to unleash a massive damage burst.",
            "key_cards": ["Doom and Gloom", "Hologram", "Recursion"],
            "payoff_cards": ["Darkness", "Multicast"]
        }
    ],
    "WATCHER": [
        {
            "name": "Stance Dance Infinite",
            "core_synergy": "Create a loop of entering and exiting stances to generate infinite energy and card draw.",
            "key_cards": ["Rushdown", "Eruption", "Inner Peace", "Fear No Evil"],
            "payoff_cards": ["Mental Fortress", "Talk to the Hand", "(any attack)"]
        },
        {
            "name": "Retain/Mantra Build",
            "core_synergy": "Retain cards to build up a powerful hand, then unleash a devastating turn with Divinity.",
            "key_cards": ["Establishment", "Worship", "Prostrate", "Devotion"],
            "payoff_cards": ["Blasphemy", "Brilliance", "Ragnarok"]
        }
    ]
} %}

# [OVERVIEW]
- **Class:** {{ game_state.class }} (Ascension {{ game_state.ascension_level }})
- **Health:** {{ game_state.current_hp }} / {{ game_state.max_hp }}
- **Gold:** {{ game_state.gold }}
- **Floor:** {{ game_state.floor }} (Act {{ game_state.act }})
- **Act Boss:** {{ game_state.act_boss }}
- **Relics:**
  {% for relic in game_state.relics %}
  - **{{ relic.name }}**{% if relic.counter != -1 %} (Counter: {{ relic.counter }}){% endif %}
  {% endfor %}
- **Potions:**
  {% if game_state.potions %}
  {% set has_potions = false %}
  {% for potion in game_state.potions %}
  {% if potion.name and potion.name != "PotionSlot" %}
  {% set has_potions = true %}
  - {{ potion.name }} (ID: {{ potion.id }}) | Usable: {{ potion.can_use }}, Discardable: {{ potion.can_discard }}
  {% endif %}
  {% endfor %}
  {% if not has_potions %}
  - (None)
  {% endif %}
  {% else %}
  - (None)
  {% endif %}
- **Deck Size:** {{ player_deck | length }} cards

# [CURRENT TASKS]
You are currently at the **{{ screen_type }}** screen.
Your objective is to analyze the following detailed context and select the optimal action based on established Spire-slaying principles and a clear deckbuilding strategy.

{%- block screen_details -%}
{% if screen_type == "COMBAT" %}
    {% include 'combat_template.jinja' %}
{% elif screen_type == "CARD_REWARD" %}
    {% include 'card_reward_template.jinja' %}
{% elif screen_type == "BOSS_REWARD" %}
    {% include 'boss_reward_template.jinja' %}
{% elif screen_type == "SHOP_SCREEN" %}
    {% include 'shop_screen_template.jinja' %}
{% elif screen_type == "REST" %}
    {% include 'rest_template.jinja' %}
{% elif screen_type == "EVENT" %}
    {% include 'event_template.jinja' %}
{% elif screen_type == "GRID" %}
    {% include 'grid_select_template.jinja' %}
{% elif screen_type == "HAND_SELECT" %}
    {% include 'hand_select_template.jinja' %}
{% elif screen_type == "GAME_OVER" %}
    {% include 'game_over_template.jinja' %}
{% elif screen_type == "MAP" %}
    {% include 'map_template.jinja' %}
{% elif screen_type == "COMBAT_REWARD" %}
    <p>You have defeated the enemy. Collect your rewards. The standard command is `proceed`.</p>
{% else %}
    <p>This is a generic screen. Analyze the available commands and choose the most logical one to proceed. Your command is likely `proceed` or `choose X` (where X is choice index).</p>
{% endif %}
{%- endblock -%}

# [AVAILABLE ACTIONS]
## **Currently Available Commands:**
{% for cmd in game_state_json.available_commands %}
- **`{{ cmd }}`**
{% endfor %}

## **Command Format Reference:**
{% if "play" in game_state_json.available_commands %}
- **`play X`** - Play card at position X (1-indexed) from your hand
- **`play X Y`** - Play targeted card at position X, targeting enemy Y (0-indexed)
{% endif %}
{% if "choose" in game_state_json.available_commands %}
- **`choose X`** - Make choice X (can be index number or choice text)
{% endif %}
{% if "end" in game_state_json.available_commands %}
- **`end`** - End your current turn (combat only)                           
{% endif %}
{% if "potion" in game_state_json.available_commands %}
- **`potion use X`** - Use potion at slot X (0-indexed)
- **`potion use X Y`** - Use targeted potion at slot X on enemy Y
- **`potion discard X`** - Discard potion at slot X
{% endif %}
{% if "proceed" in game_state_json.available_commands or "confirm" in game_state_json.available_commands %}
- **`proceed`** / **`confirm`** - Confirm current action and proceed
{% endif %}
{% if "skip" in game_state_json.available_commands or "cancel" in game_state_json.available_commands or "leave" in game_state_json.available_commands %}
- **`skip`** / **`cancel`** / **`leave`** - Cancel current action or leave screen
{% endif %}

**CRITICAL: You MUST use only the commands listed above. Using unavailable commands will result in an error.**

# [INSTRUCTIONS]
## **STRATEGIC DECISION FRAMEWORK (Tree of Thoughts Analysis):**

**Step 1 - Situation Assessment:**
- What is my immediate tactical goal? (Survive this turn, maximize damage, gain resources, etc.)
- What is my strategic long-term goal? (Complete archetype combo, prepare for boss, deck refinement, etc.)
- What constraints do I have? (Health, energy, hand composition, available commands)

**Step 2 - Option Generation:**
- List ALL viable choices available to me
- For each option, identify the immediate effect and long-term consequence
- Consider multi-step sequences (e.g., "If I do A now, then I can do B next turn")

**Step 3 - Deep Comparative Analysis:**
- **For each option, analyze:**
  - **Immediate gains:** What do I get right now?
  - **Immediate costs:** What do I give up or risk?
  - **Future opportunities:** What does this enable later?
  - **Future restrictions:** What does this prevent or make harder?
  - **Risk assessment:** What could go wrong with this choice?

**Step 4 - Weighted Decision Making:**
- **Example reasoning pattern:** "If I choose option A, I gain [specific benefit] but lose [specific cost]. If I choose option B, I gain [different benefit] and avoid [risk], but miss the opportunity to [future gain]. Option A is better because [weighted reasoning]."
- Compare the total value (immediate + future) of each option
- Consider probability of success and failure scenarios
- Account for the current game state context (Act, health, deck strength)

**Step 5 - Execute with Confidence:**
- Select the option with the highest expected value
- Formulate the precise command to execute it
- **CRITICAL:** Always provide your reasoning in the format: "I choose [option] because [immediate reasoning] and [strategic reasoning], while rejecting [alternative] because [specific drawback]."

